#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

&lt {
    tapping-term-ms = <300>;
    flavor = "balanced";
    quick-tap-ms = <250>;
};

&mt {
    tapping-term-ms = <400>;
    flavor = "tap-preferred";
    quick-tap-ms = <350>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
&none  &kp Q             &kp W        &kp E         &kp R           &kp T      &kp Y          &kp U            &kp I           &kp O             &kp P                  &none
&none  &kp A             &kp S        &kp D         &kp F           &kp G      &kp H          &kp J            &kp K           &kp L             &lt 6 SEMI             &none
&none  &lt LEFT_SHIFT Z  &lt X LCTRL  &mt C LWIN    &mt V LEFT_ALT  &kp B      &kp N          &mt M RIGHT_ALT  &mt COMMA RWIN  &mt PERIOD RCTRL  &mt RIGHT_SHIFT SLASH  &none
                                      &lt 3 ESCAPE  &lt 1 SPACE     &kp TAB    &kp BACKSPACE  &lt 4 ENTER
            >;
        };

        Lower {
            label = "Lower";
            bindings = <
&trans        &trans    &kp UP    &trans     &trans     &trans      &kp N7     &kp N8   &kp N9  &kp N0   &kp HOME  &kp F1
&trans        &kp LEFT  &kp DOWN  &kp RIGHT  &trans     &trans      &kp N4     &kp N5   &kp N6  &none    &trans    &kp F10
&kp LEFT_ALT  &trans    &trans    &trans     &kp MINUS  &kp PLUS    &kp N1     &kp N2   &kp N3  &kp DOT  &trans    &kp F20
                                  &kp LGUI   &kp SPACE  &trans      &kp RCTRL  &kp RET
            >;
        };

        Raise {
            label = "Raise";
            bindings = <
&trans  &kp EXCL      &kp AT       &kp HASH    &kp DLLR   &kp PRCNT       &kp CARET  &kp AMPS     &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp DEL
&trans  &bt BT_CLR    &bt BT_PRV   &bt BT_NXT  &trans     &to 3           &kp UNDER  &kp EQUAL    &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &out OUT_TOG  &bootloader  &trans      &trans     &trans          &kp MINUS  &kp PLUS     &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                   &kp LGUI    &kp SPACE  &kp LEFT_ALT    &trans     &bootloader
            >;
        };

        Game {
            label = "Game";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &sl 4           &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans    &trans  &trans  &trans  &trans  &to 0
                        &trans  &trans  &kp LEFT_ALT    &kp RGUI  &trans
            >;
        };

        Game_++ {
            label = "Game ++";
            bindings = <
&kt F5   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp LC(RA(Y))  &kp LC(RA(U))  &kp LC(RA(I))  &kp LC(RA(H))  &kp LC(RA(J))  &kp LC(RA(DEL))
&to 3    &kp L         &kp O         &kp Y         &kp K         &kp G           &trans         &trans         &trans         &trans         &trans         &kp LA(F4)
&kp F10  &none         &to 0         &none         &kp NUMBER_6  &kp NUMBER_7    &trans         &trans         &trans         &trans         &trans         &to 0
                                     &kp J         &kp I         &kp M           &trans         &kp M
            >;
        };

        Mouse {
            bindings = <
&trans  &trans  &bt BT_CLR  &trans        &trans        &trans          &trans  &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans      &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0    &trans  &mkp LCLK  &mkp RCLK  &trans  &trans  &trans
&trans  &trans  &trans      &trans        &trans        &trans          &trans  &trans     &trans     &trans  &trans  &trans
                            &trans        &trans        &trans          &trans  &trans
            >;
        };
    };
};
